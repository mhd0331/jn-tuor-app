진안군 장터 앱

## 진안군 앱 통합 문서: 데이터베이스, 웹 입력 설문지, 관리자 CMS 설계 (Ver. 2)

### 1. 데이터베이스 구조 (재확인)

이전 답변에서 보완된 데이터베이스 구조는 다음과 같습니다. 이 구조는 웹 입력 설문지 및 관리자 CMS에서 CRUD 작업을 수행할 기반이 됩니다.

**1. `Users` 테이블 (사용자 정보)**

* `user_id` (PK, INT): 사용자 고유 ID
* `username` (VARCHAR): 사용자 이름/닉네임
* `email` (VARCHAR): 이메일 주소 (로그인 및 알림용)
* `phone_number` (VARCHAR): 연락처
* `password_hash` (VARCHAR): 비밀번호 해시 값
* `created_at` (DATETIME): 계정 생성일
* `last_login_at` (DATETIME): 마지막 로그인 일시

**2. `Myeons` 테이블 (진안군 각 면 정보)**

* `myeon_id` (PK, INT): 면 고유 ID
* `myeon_name` (VARCHAR): 면 이름 (예: '진안읍', '용담면')
* `myeon_description` (TEXT): 면 소개
* `myeon_image_url` (VARCHAR): 면 대표 이미지 URL

**3. `Markets` 테이블 (장터 정보)**

* `market_id` (PK, INT): 장터 고유 ID
* `myeon_id` (FK, INT): 소속 면 ID (Myeons 테이블 참조)
* `market_name` (VARCHAR): 장터 이름 (예: '진안고원시장')
* `market_description` (TEXT): 장터 소개
* `market_address` (VARCHAR): 장터 주소
* `market_phone_number` (VARCHAR): 장터 대표 전화번호
* `market_latitude` (DECIMAL): 위도 (지도 표시용)
* `market_longitude` (DECIMAL): 경도 (지도 표시용)
* `market_operating_hours_text` (VARCHAR): 장터 운영 시간 (텍스트, 예: "매일 9시~18시, 휴무일 없음")

**4. `Stores` 테이블 (가게 정보)**

* `store_id` (PK, INT): 가게 고유 ID
* `market_id` (FK, INT): 소속 장터 ID (Markets 테이블 참조)
* `store_name` (VARCHAR): 가게 이름
* `store_address` (VARCHAR): 가게 주소
* `store_phone_number` (VARCHAR): 가게 전화번호
* `store_email` (VARCHAR): 가게 이메일
* `store_account_number` (VARCHAR): 가게 계좌번호 (선택 사항, 예약금 결제 시)
* `store_description` (TEXT): 가게 상세 소개
* `store_latitude` (DECIMAL): 위도 (지도 표시용)
* `store_longitude` (DECIMAL): 경도 (지도 표시용)
* `owner_notification_method` (VARCHAR): 알림 방법 (예: 'sms', 'lms', 'mms', 'kakao')
* `owner_notification_contact` (VARCHAR): 알림 받을 연락처 (전화번호, 카톡ID 등)
* `store_main_image_url` (VARCHAR): 가게 대표 이미지 URL

**5. `StoreOperatingHours` 테이블 (가게 요일별 운영 시간)**

* `hour_id` (PK, INT): 운영 시간 고유 ID
* `store_id` (FK, INT): 소속 가게 ID (Stores 테이블 참조)
* `day_of_week` (VARCHAR): 요일 (예: '월', '화', '수', '목', '금', '토', '일', '공휴일')
* `open_time` (TIME): 시작 시간
* `close_time` (TIME): 종료 시간
* `is_closed` (BOOLEAN): 해당 요일 휴무 여부 (True/False)

**6. `Menus` 테이블 (메뉴 정보)**

* `menu_id` (PK, INT): 메뉴 고유 ID
* `store_id` (FK, INT): 소속 가게 ID (Stores 테이블 참조)
* `menu_name` (VARCHAR): 메뉴 이름
* `price` (DECIMAL): 가격
* `menu_description` (TEXT): 메뉴 설명
* `menu_image_url` (VARCHAR): 메뉴 사진 URL
* `is_available` (BOOLEAN): 현재 판매 가능 여부 (True/False)

**7. `Reservations` 테이블 (예약 정보)**

* `reservation_id` (PK, INT): 예약 고유 ID
* `store_id` (FK, INT): 예약한 가게 ID (Stores 테이블 참조)
* `user_id` (FK, INT): 예약한 사용자 ID (Users 테이블 참조, 비회원 예약 시 NULL 가능)
* `reserver_name` (VARCHAR): 예약자 이름
* `reserver_phone_number` (VARCHAR): 예약자 연락처
* `reservation_date` (DATE): 예약 날짜
* `reservation_time` (TIME): 예약 시간
* `number_of_people` (INT): 예약 인원
* `discount_conditions` (TEXT): 할인 조건 (예: '단체 할인', '쿠폰 사용')
* `request_notes` (TEXT): 요청 사항 (예: '창가 자리 요청')
* `status` (VARCHAR): 예약 상태 (예: '대기중', '확정', '취소', '완료', '노쇼')
* `created_at` (DATETIME): 예약 생성일
* `confirmed_at` (DATETIME): 예약 확정일 (가게 주인이 확정 시)

**8. `Reviews` 테이블 (후기 정보)**

* `review_id` (PK, INT): 후기 고유 ID
* `store_id` (FK, INT): 후기를 작성한 가게 ID (Stores 테이블 참조)
* `user_id` (FK, INT): 후기를 작성한 사용자 ID (Users 테이블 참조)
* `rating` (INT): 평점 (1~5점)
* `comment` (TEXT): 후기 내용
* `created_at` (DATETIME): 후기 작성일
* `likes_count` (INT): 좋아요 수
* `dislikes_count` (INT): 나빠요 수

**9. `StoreMedia` 테이블 (가게 홍보 이미지/동영상)**

* `media_id` (PK, INT): 미디어 고유 ID
* `store_id` (FK, INT): 소속 가게 ID (Stores 테이블 참조)
* `media_type` (VARCHAR): 미디어 유형 (예: 'image', 'video')
* `media_url` (VARCHAR): 미디어 파일 URL
* `description` (TEXT): 미디어 설명 (선택 사항)
* `order_num` (INT): 정렬 순서 (갤러리 표시용)
* `uploaded_at` (DATETIME): 업로드 일시

**10. `Notifications` 테이블 (알림 로그 - 선택 사항)**

* `notification_id` (PK, INT): 알림 고유 ID
* `reservation_id` (FK, INT): 관련 예약 ID (Reservations 테이블 참조)
* `store_id` (FK, INT): 알림 대상 가게 ID (Stores 테이블 참조)
* `recipient_type` (VARCHAR): 수신자 유형 (예: 'store_owner', 'user')
* `delivery_method` (VARCHAR): 전송 방법 (예: 'sms', 'kakao')
* `message_content` (TEXT): 전송된 메시지 내용
* `sent_at` (DATETIME): 전송 일시
* `status` (VARCHAR): 전송 상태 (예: '성공', '실패')

---

### 2. 웹 기반 데이터베이스 입력 설문지 (가게 정보 등록 양식)

이 양식은 웹 화면에서 사용자가 직접 가게 정보를 입력하고, 해당 정보가 유효성 검사를 거쳐 즉시 데이터베이스에 저장되도록 설계됩니다.

**페이지 제목: 가게 정보 등록 (진안군 앱)**

**설명:** 진안군 앱에 가게 정보를 등록해주세요. 입력하신 정보는 즉시 앱에 반영됩니다.

---

**[섹션 1: 가게 기본 정보]**

1.  **가게 이름:**
    * `<input type="text" id="storeName" name="storeName" required placeholder="예: 할매국밥">`
    * **설명:** 가게의 정식 명칭을 입력해주세요.
2.  **소속 장터:**
    * `<select id="marketSelect" name="marketId" required>`
        * `<option value="">장터를 선택하세요</option>`
        * ``
        * `<option value="1">진안고원시장</option>`
        * `<option value="2">기타 장터 (추후 추가)</option>`
        * `<option value="0">장터에 속하지 않음 (개별 가게)</option>`
    * **설명:** 가게가 속한 장터를 선택해주세요.
3.  **가게 주소:**
    * `<input type="text" id="storeAddress" name="storeAddress" required placeholder="예: 전라북도 진안군 진안읍 시장2길 22">`
    * **설명:** 정확한 가게 주소를 입력해주세요. 지도 연동에 사용됩니다.
4.  **가게 대표 전화번호:**
    * `<input type="tel" id="storePhone" name="storePhone" required placeholder="예: 063-123-4567" pattern="[0-9]{2,3}-[0-9]{3,4}-[0-9]{4}">`
    * **설명:** 고객이 연락할 수 있는 대표 전화번호를 입력해주세요.
5.  **가게 이메일 주소:**
    * `<input type="email" id="storeEmail" name="storeEmail" placeholder="예: storename@example.com">`
    * **설명:** 가게 관련 문의를 받을 이메일 주소입니다. (선택 사항)
6.  **가게 계좌번호 (예약금 결제 시):**
    * `<input type="text" id="bankName" name="bankName" placeholder="은행명">`
    * `<input type="text" id="accountNumber" name="accountNumber" placeholder="계좌번호">`
    * `<input type="text" id="accountHolder" name="accountHolder" placeholder="예금주">`
    * **설명:** 예약금 결제 등으로 사용될 계좌 정보입니다. (선택 사항)
7.  **가게 상세 소개:**
    * `<textarea id="storeDescription" name="storeDescription" rows="5" maxlength="2000" placeholder="가게의 특징, 역사, 주요 메뉴 등 상세한 설명을 입력해주세요."></textarea>`
    * **설명:** 가게를 설명하는 글을 작성해주세요. 최대 2000자까지 가능합니다.
8.  **가게 대표 이미지:**
    * `<input type="file" id="storeMainImage" name="storeMainImage" accept="image/*">`
    * **설명:** 앱에서 가게 목록에 표시될 대표 이미지를 업로드해주세요. (파일 업로드 후 URL로 변환되어 DB 저장)

---

**[섹션 2: 가게 운영 시간]**

요일별 운영 시간을 정확히 입력해주세요. (예: 09:00 ~ 20:00) 휴무일은 '휴무'를 체크해주세요.

* **월요일:** `<input type="time" name="monOpen"> ~ <input type="time" name="monClose"> <input type="checkbox" name="monClosed"> 휴무`
* **화요일:** `<input type="time" name="tueOpen"> ~ <input type="time" name="tueClose"> <input type="checkbox" name="tueClosed"> 휴무`
* ... (일요일, 공휴일까지 반복)
* **설명:** 각 요일의 운영 시작 시간과 종료 시간을 입력해주세요. 휴무일인 경우 '휴무'를 선택해주세요.

---

**[섹션 3: 메뉴 정보]**

**메뉴 추가 (최소 1개 메뉴 등록 권장)**
`<button type="button" id="addMenuBtn">메뉴 추가</button>`

* **메뉴 1:**
    * **메뉴 이름:** `<input type="text" name="menuName[]" placeholder="예: 돼지국밥" required>`
    * **가격:** `<input type="number" name="menuPrice[]" placeholder="예: 9000" required>`
    * **메뉴 설명:** `<textarea name="menuDescription[]" rows="2" placeholder="메뉴에 대한 간략한 설명을 입력해주세요."></textarea>`
    * **메뉴 사진:** `<input type="file" name="menuImage[]" accept="image/*">`
    * **현재 판매 가능 여부:** `<input type="checkbox" name="isMenuAvailable[]" checked> 판매 가능`
    * `<button type="button" class="removeMenuBtn">메뉴 삭제</button>`
* ``

---

**[섹션 4: 가게 홍보 (이미지/숏 동영상)]**

가게를 홍보할 이미지나 숏 동영상을 업로드해주세요.

**미디어 추가**
`<button type="button" id="addMediaBtn">미디어 추가</button>`

* **미디어 1:**
    * **파일 유형:** `<select name="mediaType[]"> <option value="image">이미지</option> <option value="video">동영상</option> </select>`
    * **파일 업로드:** `<input type="file" name="mediaFile[]" accept="image/*,video/*">`
    * **설명:** `<input type="text" name="mediaDescription[]" placeholder="미디어에 대한 설명 (선택 사항)">`
    * `<button type="button" class="removeMediaBtn">미디어 삭제</button>`
* ``

---

**[섹션 5: 예약 알림 설정]**

새로운 예약이 발생했을 때 가게 주인에게 알림을 보낼 방법을 선택해주세요.

1.  **알림 방법:**
    \* 필수 선택
    ( ) SMS
    ( ) LMS
    ( ) MMS
    ( ) 카카오톡 (카카오 비즈니스 채널 연동 필요)

2.  **알림 수신 연락처/ID:**
    \* 필수 입력 (선택한 알림 방법에 따라)
    예) 010-1234-5678 (SMS/LMS/MMS), @가게이름 (카카오톡)

---

`<button type="submit">가게 정보 등록하기</button>`

---

**웹 입력 양식의 동작 방식:**

1.  **클라이언트 사이드 유효성 검사:** HTML `required` 속성 및 JavaScript를 사용하여 필수 항목 누락, 형식 오류(전화번호, 이메일 등)를 실시간으로 확인하여 사용자의 오류를 최소화합니다.
2.  **폼 데이터 전송:** 사용자가 '가게 정보 등록하기' 버튼을 클릭하면, 입력된 모든 데이터는 서버로 전송됩니다. 파일(이미지, 동영상)은 별도로 업로드되어 URL로 변환됩니다.
3.  **서버 사이드 처리:**
    * 서버는 전송된 데이터를 한 번 더 유효성 검사합니다.
    * 유효한 데이터는 해당하는 데이터베이스 테이블(`Stores`, `StoreOperatingHours`, `Menus`, `StoreMedia`)에 삽입(CREATE)됩니다.
    * 가게 주소에 기반하여 위도/경도(`store_latitude`, `store_longitude`)를 자동으로 계산하여 저장합니다 (지도 API 연동).
    * 파일 업로드 후 반환된 URL을 데이터베이스에 저장합니다.
4.  **즉시 반영:** 데이터베이스에 저장된 내용은 앱 서비스에서 실시간으로 쿼리하여 웹 화면에 즉시 반영되도록 구현합니다. (예: 새로운 가게 등록 시 앱의 가게 목록에 바로 표시).

---

### 3. 관리자 CMS (콘텐츠 관리 시스템) 설계

관리자 CMS는 데이터베이스의 모든 정보를 CRUD(생성, 읽기, 업데이트, 삭제)할 수 있는 웹 기반 도구입니다. 앱의 콘텐츠를 유연하게 관리하고 실시간으로 반영하는 데 필수적입니다.

**관리자 CMS 로그인 페이지**
(관리자 ID/비밀번호 입력)

---

**관리자 CMS 대시보드 (로그인 후 첫 화면)**

* **요약 정보:**
    * 총 등록 가게 수
    * 총 예약 건수 (오늘/이번 주/이번 달)
    * 최근 등록된 가게
    * 처리 대기 중인 예약 알림 수
* **빠른 메뉴:**
    * 새 가게 등록
    * 예약 관리
    * 공지사항 작성

---

**[메인 메뉴]**

**1. 면 관리 (Myeons)**
    * **목록/조회:** 등록된 모든 면 목록 표시.
        * 각 면 클릭 시 상세 정보 조회.
        * **기능:** 면 정보 수정(UPDATE), 면 추가(CREATE), 면 삭제(DELETE).
        * **필드:** 면 이름, 면 소개, 면 대표 이미지 URL.
    * **예상 화면:** 테이블 형태로 면 목록 표시, 각 행에 수정/삭제 버튼. '새 면 추가' 버튼.

**2. 장터 관리 (Markets)**
    * **목록/조회:** 등록된 모든 장터 목록 표시.
        * 각 장터 클릭 시 상세 정보 조회 및 소속 가게 목록 연결.
        * **기능:** 장터 정보 수정(UPDATE), 장터 추가(CREATE), 장터 삭제(DELETE).
        * **필드:** 장터 이름, 소속 면, 장터 소개, 주소, 전화번호, 운영 시간 텍스트, 위도/경도.
    * **예상 화면:** 테이블 형태로 장터 목록 표시, 각 행에 수정/삭제 버튼. '새 장터 추가' 버튼.

**3. 가게 관리 (Stores)**
    * **목록/조회:** 모든 등록 가게 목록 표시.
        * 필터링: 면별, 장터별, 상태별 (예: 활성/비활성).
        * 검색: 가게 이름, 주소, 전화번호.
        * 각 가게 클릭 시 상세 정보 페이지로 이동.
    * **가게 상세/수정 페이지:**
        * **기능:** 가게 정보 수정(UPDATE), 신규 가게 등록(CREATE), 가게 삭제(DELETE).
            * **가게 기본 정보:** 가게 이름, 소속 장터, 주소, 전화번호, 이메일, 계좌번호, 상세 소개(텍스트 에디터, 2000자 제한 표시), 대표 이미지 업로드/변경.
            * **운영 시간 관리:** 요일별 운영 시간 테이블 (추가/수정/삭제 가능). 요일별 휴무 설정.
            * **메뉴 관리:** 메뉴 목록 (메뉴 이름, 가격, 설명, 사진, 판매 가능 여부) - 각 메뉴별 추가/수정/삭제 기능 제공. 드래그 앤 드롭으로 메뉴 순서 변경 가능.
            * **홍보 미디어 관리:** 이미지 및 숏 동영상 목록 (파일 업로드, URL 확인, 설명, 순서 변경) - 각 미디어별 추가/수정/삭제 기능 제공.
            * **예약 알림 설정:** 알림 방법 및 수신 연락처 수정.
            * **가게 활성/비활성 상태 변경:** 앱에 노출 여부 제어.
        * **예상 화면:** 복잡한 폼 형태. 탭 또는 아코디언 메뉴로 섹션 구분 (기본 정보, 운영 시간, 메뉴, 미디어, 알림 설정). 실시간 미리보기 기능.

**4. 예약 관리 (Reservations)**
    * **목록/조회:** 모든 예약 목록 표시.
        * 필터링: 가게별, 날짜별, 상태별 (대기중, 확정, 취소, 완료, 노쇼).
        * 검색: 예약자명, 예약자 연락처.
        * 정렬: 예약 시간, 생성 시간.
    * **기능:**
        * **예약 상태 변경:** '대기중' -> '확정', '취소', '노쇼', '완료' 등으로 변경. (상태 변경 시 사용자 또는 가게에 알림 전송 연동)
        * **예약 상세 조회:** 예약자 정보, 메뉴, 인원, 요청 사항, 할인 조건 등.
        * **수동 예약 추가:** 전화 예약 등의 경우 관리자가 직접 예약 추가.
        * **예약 수정/삭제:** (관리자 권한으로만 가능)
    * **예상 화면:** 테이블 형태로 예약 목록 표시. 각 예약 건별로 상세 보기, 상태 변경 드롭다운 메뉴, 삭제 버튼.

**5. 후기 관리 (Reviews)**
    * **목록/조회:** 모든 후기 목록 표시.
        * 필터링: 가게별, 평점별.
        * 검색: 후기 내용, 사용자 이름.
    * **기능:**
        * **후기 삭제:** 부적절한 후기 삭제.
        * **답글 달기:** (선택 사항, 가게 주인 또는 관리자가 후기에 답글)
        * **좋아요/나빠요 수 통계 확인.**
    * **예상 화면:** 테이블 형태로 후기 목록 표시. 각 후기 내용, 작성자, 평점, 좋아요/나빠요 수 표시. 삭제 버튼.

**6. 사용자 관리 (Users)**
    * **목록/조회:** 앱 사용자 목록.
    * **기능:** 사용자 정보 조회, 사용자 계정 비활성화/삭제(신중), 권한 변경 (예: 일반 사용자 -> 가게 관리자).
    * **예상 화면:** 테이블 형태로 사용자 목록 표시.

**7. 공지사항/이벤트 관리 (Notice/Events)**
    * **목록/조회:** 공지사항 및 이벤트 목록.
    * **기능:** 새 공지사항/이벤트 작성(CREATE), 수정(UPDATE), 삭제(DELETE), 게시 상태 변경(공개/비공개).
    * **필드:** 제목, 내용(텍스트 에디터), 작성일, 게시 시작일/종료일.
    * **예상 화면:** 공지사항/이벤트 목록 테이블, 글쓰기 버튼.

**8. 시스템 설정 (Settings)**
    * **관리자 계정 관리:** 추가/삭제, 비밀번호 변경.
    * **알림 시스템 설정:** SMS/카카오톡 API 키, 발신 번호 등 연동 설정.
    * **기타 앱 전반적인 설정.**

---

**관리자 CMS와 웹 화면 연결 및 즉시 반영:**

* **API 기반 통신:** 관리자 CMS는 백엔드 API 서버를 통해 데이터베이스와 통신합니다. (예: RESTful API)
* **실시간 데이터 반영:**
    * **CRUD 작업:** 관리자 CMS에서 데이터를 생성, 수정, 삭제하면, 해당 변경 사항은 즉시 데이터베이스에 반영됩니다.
    * **캐싱 전략:** 일반적으로 웹 애플리케이션은 성능 향상을 위해 캐싱을 사용하지만, CMS를 통한 중요한 데이터 변경(예: 메뉴 가격, 가게 영업 시간)은 즉시 앱에 반영되도록 캐시 무효화(Cache Invalidation) 또는 짧은 캐시 유효 기간을 설정합니다.
    * **웹훅/푸시 알림 (선택 사항):** 중요한 변경 사항(예: 가게 상태 변경)이 발생했을 때, 앱 클라이언트에게 푸시 알림을 보내 데이터를 새로고침하도록 유도하여 더욱 즉각적인 반영을 구현할 수 있습니다.
* **권한 관리:** 관리자 CMS는 역할 기반 접근 제어(RBAC)를 통해 각 관리자 계정별로 접근할 수 있는 메뉴와 수행할 수 있는 작업(읽기, 쓰기 등)을 제한합니다. (예: 특정 장터 관리자는 해당 장터 내 가게 정보만 수정 가능)

이 설계는 진안군 앱의 효율적인 운영과 지속적인 콘텐츠 관리를 위한 기본적인 틀을 제공합니다. 개발 시 각 기능의 상세 구현 방안을 더욱 구체화해야 합니다.